{
    "collab_server" : "",
    "contents" : "rm(list=ls())\nlibrary(monitoR)\n#Make and test templates.\n##Template creation.\nbithTemplate1 <- makeCorTemplate(clip = \"/Users/johnlloyd/GitHub/BITH_Maine/bithCall3.wav\",\n                                 name = \"c1\", frq.lim = c(3,4.75))\nbithTemplate2 <- makeCorTemplate(clip = \"/Users/johnlloyd/GitHub/BITH_Maine/bithSong7.wav\",\n                                  name = \"s1\", frq.lim = c(3,9))\nbithTemplate3 <- makeCorTemplate(clip = \"/Users/johnlloyd/GitHub/BITH_Maine/bithSong8.wav\",\n                                  name = \"s2\", frq.lim = c(4.5,8))\n\nbithTemp <- combineCorTemplates(bithTemplate1, bithTemplate2, bithTemplate3)\n\ndbUploadTemplate(templates = bithTemp,\n                 uid = \"root\",\n                 pwd = \"RSW4xN!!\",\n                 db.name = \"noh\",\n                 analyst = 1, \n                 locationID = \"2\",\n                 date.recorded = \"2017/09/07\",\n                 recording.equip = \"Unknown\",\n                 species.code = \"BITH\",\n                 type = \"COR\")\n\n##Template testing.\n###Survey is from Mansfield, 2016, and contains singing and calling Bicknell's. \nscores.test <-corMatch(survey = \"S4A01574_20160604_210803.wav\", templates = bithTemp,\n                   parallel = T, show.prog = TRUE, cor.method = \"pearson\")\ndetects.test <- findPeaks(score.obj = scores.test, parallel = T)\ndetects.test\nplot(detects.test, t.each = 120)\ndf <- data.frame(getDetections(detects.test))\n\n\n\n##\nsurveylist <- list.files(path = \"/Volumes/Untitled\", pattern = \"WS33L7\")\nscores <- vector(\"list\", length(surveylist))\nfor(i in 1:length(surveylist)){\n  scores[[i]] <- corMatch(survey = paste0(\"/Volumes/Untitled/\",surveylist[i]), templates = bithTemp, parallel = T, show.prog = TRUE,\n                        cor.method = \"pearson\")\n}\n\ndetects <- vector(\"list\", length(surveylist))\nfor(i in 1:length(surveylist)){\n  detects[[i]] <- findPeaks(score.obj = scores[[i]], parallel = T)\n}\n\n##I couldn't get the dbUploadResult function to work, so here \n##I've pulled out the needed arguments. Initially, this has to be done\n##manually for each detection list in the grand detection list. \n\n## Uploading results for first survey results:\ndetects.sub <- detects[[1]]\ndetects.sub@survey.name <- \"WS33L7_2017-06-05_215700_EDT_00000_000.wav\"\npks.L <- getDetections(detection.obj = detects.sub, \n                  output = \"list\", which.one = \"c1\")\nanalysis.type <- \"COR\"\ndbCon <- RODBC::odbcConnect(dsn = \"noh\", uid = \"root\", pwd = \"RSW4xN!!\")\n#which.one <- names(pks.L)\n#which.one <- \"c1\"\ncutoff <- lapply(detects.sub@templates, function(x) x@score.cutoff)\ntemplateID <- unlist(lapply(pks.L, function(x) unique(x$template)))\ntemplate.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkTemplateID`, `fldTemplateName` FROM `tblTemplate` WHERE `fldTemplateName` = '\", \n                                             paste(names(pks.L), sep = \"\", collapse = \"' OR `fldTemplateName` = '\"), \n                                             \"'\", sep = \"\"))\ntemplateID[1] <- template.dat$pkTemplateID[template.dat$fldTemplateName == \n                                             templateID[1]]\nsurvey.name <- detects.sub@survey.name\nsurvey.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkSurveyID`, `fldSurveyName` FROM `tblSurvey` WHERE `fldSurveyName` = '\", \n                                           paste(survey.name, sep = \"\", collapse = \"' OR `fldSurveyName` = '\"), \n                                           \"'\", sep = \"\"))\nsurvey.name[1] <- survey.dat$pkSurveyID[survey.dat$fldSurveyName == \n                                          survey.name[1]]\npks.L[[1]]$template <- templateID[[1]]\npks.L[[1]]$score.cutoff <- cutoff[[1]]\n##rbindf\nrbindf <- function(...) {\n  \n  l <- list(...)\n  if(length(l) == 1) l <- l[[1]]\n  nn <- length(l)\n  \n  x <- l[[1]]\n  if(length(l)>1){\n    for(i in 2:nn) {\n      y <- l[[i]]\n      if(!all(yinx <- names(y) %in% names(x))) {\n        x[, names(y)[!yinx]] <- NA\n      } \n      if(!all(xiny <- names(x) %in% names(y))) {\n        y[, names(x)[!xiny]] <- NA\n      } \n      x <- rbind(x, y)\n    }\n  }\n  return(x)\n}\n##\npks.L <- rbindf(pks.L)\ndate.time <- unlist(lapply(X = pks.L$date.time, FUN = substr, \n                           start = 1, stop = 19))\ntzone <- unlist(lapply(pks.L$date.time, function(x) as.character(x, \n                                                                 format = \"%Z\")))\nstart.time <- Sys.time()\nquery <- paste(\"INSERT INTO `tblResult` (`fkSurveyID`, `fkTemplateID`, `fkPersonID`, `fldDateTime`, `fldTimeZone`, `fldTime`, `fldScore`, `fldAnalysisType`,`fldCutoffValue`) VALUES ('\", \n               paste(survey.name, \"', '\", pks.L$template, \n                     \"', '\", analyst, \"', '\", date.time, \"', '\", tzone, \n                     \"', '\", pks.L$time, \"', '\", pks.L$score, \"', '\",\n                     analysis.type, \"', '\", \n                     pks.L$score.cutoff, \"')\", sep = \"\", collapse = \", ('\"), \n               sep = \"\")\nstatus <- RODBC::sqlQuery(dbCon, query)\nmessage(if (is.na(status[1])) {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse if (status[1] == \"character(0)\") {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse paste(\"Upload unsuccessful; RODBC returned errors: \", \n           paste(status, collapse = \" \")))\n\n## Second result:\ndetects.sub <- detects[[2]]\ndetects.sub@survey.name <- \"WS33L7_2017-06-06_062700_EDT_00000_000.wav\"\npks.L <- getDetections(detection.obj = detects.sub, \n                       output = \"list\", which.one = \"c1\")\nanalysis.type <- \"COR\"\ndbCon <- RODBC::odbcConnect(dsn = \"noh\", uid = \"root\", pwd = \"RSW4xN!!\")\n#which.one <- names(pks.L)\n#which.one <- \"c1\"\ncutoff <- lapply(detects.sub@templates, function(x) x@score.cutoff)\ntemplateID <- unlist(lapply(pks.L, function(x) unique(x$template)))\ntemplate.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkTemplateID`, `fldTemplateName` FROM `tblTemplate` WHERE `fldTemplateName` = '\", \n                                             paste(names(pks.L), sep = \"\", collapse = \"' OR `fldTemplateName` = '\"), \n                                             \"'\", sep = \"\"))\ntemplateID[1] <- template.dat$pkTemplateID[template.dat$fldTemplateName == \n                                             templateID[1]]\nsurvey.name <- detects.sub@survey.name\nsurvey.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkSurveyID`, `fldSurveyName` FROM `tblSurvey` WHERE `fldSurveyName` = '\", \n                                           paste(survey.name, sep = \"\", collapse = \"' OR `fldSurveyName` = '\"), \n                                           \"'\", sep = \"\"))\nsurvey.name[1] <- survey.dat$pkSurveyID[survey.dat$fldSurveyName == \n                                          survey.name[1]]\npks.L[[1]]$template <- templateID[[1]]\npks.L[[1]]$score.cutoff <- cutoff[[1]]\n\npks.L <- rbindf(pks.L)\ndate.time <- unlist(lapply(X = pks.L$date.time, FUN = substr, \n                           start = 1, stop = 19))\ntzone <- unlist(lapply(pks.L$date.time, function(x) as.character(x, \n                                                                 format = \"%Z\")))\nstart.time <- Sys.time()\nquery <- paste(\"INSERT INTO `tblResult` (`fkSurveyID`, `fkTemplateID`, `fkPersonID`, `fldDateTime`, `fldTimeZone`, `fldTime`, `fldScore`, `fldAnalysisType`,`fldCutoffValue`) VALUES ('\", \n               paste(survey.name, \"', '\", pks.L$template, \n                     \"', '\", analyst, \"', '\", date.time, \"', '\", tzone, \n                     \"', '\", pks.L$time, \"', '\", pks.L$score, \"', '\",\n                     analysis.type, \"', '\", \n                     pks.L$score.cutoff, \"')\", sep = \"\", collapse = \", ('\"), \n               sep = \"\")\nstatus <- RODBC::sqlQuery(dbCon, query)\nmessage(if (is.na(status[1])) {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse if (status[1] == \"character(0)\") {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse paste(\"Upload unsuccessful; RODBC returned errors: \", \n           paste(status, collapse = \" \")))\n\n\n## Third result, for c1:\ndetects.sub <- detects[[3]]\ndetects.sub@survey.name <- \"WS33L7_2017-06-06_215700_EDT_00000_000.wav\"\npks.L <- getDetections(detection.obj = detects.sub, \n                       output = \"list\", which.one = \"c1\")\nanalysis.type <- \"COR\"\ndbCon <- RODBC::odbcConnect(dsn = \"noh\", uid = \"root\", pwd = \"RSW4xN!!\")\n#which.one <- names(pks.L)\n#which.one <- \"c1\"\ncutoff <- lapply(detects.sub@templates, function(x) x@score.cutoff)\ntemplateID <- unlist(lapply(pks.L, function(x) unique(x$template)))\ntemplate.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkTemplateID`, `fldTemplateName` FROM `tblTemplate` WHERE `fldTemplateName` = '\", \n                                             paste(names(pks.L), sep = \"\", collapse = \"' OR `fldTemplateName` = '\"), \n                                             \"'\", sep = \"\"))\ntemplateID[1] <- template.dat$pkTemplateID[template.dat$fldTemplateName == \n                                             templateID[1]]\nsurvey.name <- detects.sub@survey.name\nsurvey.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkSurveyID`, `fldSurveyName` FROM `tblSurvey` WHERE `fldSurveyName` = '\", \n                                           paste(survey.name, sep = \"\", collapse = \"' OR `fldSurveyName` = '\"), \n                                           \"'\", sep = \"\"))\nsurvey.name[1] <- survey.dat$pkSurveyID[survey.dat$fldSurveyName == \n                                          survey.name[1]]\npks.L[[1]]$template <- templateID[[1]]\npks.L[[1]]$score.cutoff <- cutoff[[1]]\n\npks.L <- rbindf(pks.L)\ndate.time <- unlist(lapply(X = pks.L$date.time, FUN = substr, \n                           start = 1, stop = 19))\ntzone <- unlist(lapply(pks.L$date.time, function(x) as.character(x, \n                                                                 format = \"%Z\")))\nstart.time <- Sys.time()\nquery <- paste(\"INSERT INTO `tblResult` (`fkSurveyID`, `fkTemplateID`, `fkPersonID`, `fldDateTime`, `fldTimeZone`, `fldTime`, `fldScore`, `fldAnalysisType`,`fldCutoffValue`) VALUES ('\", \n               paste(survey.name, \"', '\", pks.L$template, \n                     \"', '\", analyst, \"', '\", date.time, \"', '\", tzone, \n                     \"', '\", pks.L$time, \"', '\", pks.L$score, \"', '\",\n                     analysis.type, \"', '\", \n                     pks.L$score.cutoff, \"')\", sep = \"\", collapse = \", ('\"), \n               sep = \"\")\nstatus <- RODBC::sqlQuery(dbCon, query)\nmessage(if (is.na(status[1])) {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse if (status[1] == \"character(0)\") {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse paste(\"Upload unsuccessful; RODBC returned errors: \", \n           paste(status, collapse = \" \")))\n\n## Third result, for s2:\ndetects.sub <- detects[[3]]\ndetects.sub@survey.name <- \"WS33L7_2017-06-06_215700_EDT_00000_000.wav\"\npks.L <- getDetections(detection.obj = detects.sub, \n                       output = \"list\", which.one = \"s2\")\nanalysis.type <- \"COR\"\ndbCon <- RODBC::odbcConnect(dsn = \"noh\", uid = \"root\", pwd = \"RSW4xN!!\")\n#which.one <- names(pks.L)\n#which.one <- \"c1\"\ncutoff <- lapply(detects.sub@templates, function(x) x@score.cutoff)\ntemplateID <- unlist(lapply(pks.L, function(x) unique(x$template)))\ntemplate.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkTemplateID`, `fldTemplateName` FROM `tblTemplate` WHERE `fldTemplateName` = '\", \n                                             paste(names(pks.L), sep = \"\", collapse = \"' OR `fldTemplateName` = '\"), \n                                             \"'\", sep = \"\"))\ntemplateID[1] <- template.dat$pkTemplateID[template.dat$fldTemplateName == \n                                             templateID[1]]\nsurvey.name <- detects.sub@survey.name\nsurvey.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkSurveyID`, `fldSurveyName` FROM `tblSurvey` WHERE `fldSurveyName` = '\", \n                                           paste(survey.name, sep = \"\", collapse = \"' OR `fldSurveyName` = '\"), \n                                           \"'\", sep = \"\"))\nsurvey.name[1] <- survey.dat$pkSurveyID[survey.dat$fldSurveyName == \n                                          survey.name[1]]\npks.L[[1]]$template <- templateID[[1]]\npks.L[[1]]$score.cutoff <- cutoff[[1]]\n\npks.L <- rbindf(pks.L)\ndate.time <- unlist(lapply(X = pks.L$date.time, FUN = substr, \n                           start = 1, stop = 19))\ntzone <- unlist(lapply(pks.L$date.time, function(x) as.character(x, \n                                                                 format = \"%Z\")))\nstart.time <- Sys.time()\nquery <- paste(\"INSERT INTO `tblResult` (`fkSurveyID`, `fkTemplateID`, `fkPersonID`, `fldDateTime`, `fldTimeZone`, `fldTime`, `fldScore`, `fldAnalysisType`,`fldCutoffValue`) VALUES ('\", \n               paste(survey.name, \"', '\", pks.L$template, \n                     \"', '\", analyst, \"', '\", date.time, \"', '\", tzone, \n                     \"', '\", pks.L$time, \"', '\", pks.L$score, \"', '\",\n                     analysis.type, \"', '\", \n                     pks.L$score.cutoff, \"')\", sep = \"\", collapse = \", ('\"), \n               sep = \"\")\nstatus <- RODBC::sqlQuery(dbCon, query)\nmessage(if (is.na(status[1])) {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse if (status[1] == \"character(0)\") {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse paste(\"Upload unsuccessful; RODBC returned errors: \", \n           paste(status, collapse = \" \")))\nclose(dbCon)\n\n## Fourth result:\ndetects.sub <- detects[[4]]\ndetects.sub@survey.name <- \"WS33L7_2017-06-07_062600_EDT_00000_000.wav\"\npks.L <- getDetections(detection.obj = detects.sub, \n                       output = \"list\", which.one = \"s2\")\nanalysis.type <- \"COR\"\ndbCon <- RODBC::odbcConnect(dsn = \"noh\", uid = \"root\", pwd = \"RSW4xN!!\")\n#which.one <- names(pks.L)\n#which.one <- \"c1\"\ncutoff <- lapply(detects.sub@templates, function(x) x@score.cutoff)\ntemplateID <- unlist(lapply(pks.L, function(x) unique(x$template)))\ntemplate.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkTemplateID`, `fldTemplateName` FROM `tblTemplate` WHERE `fldTemplateName` = '\", \n                                             paste(names(pks.L), sep = \"\", collapse = \"' OR `fldTemplateName` = '\"), \n                                             \"'\", sep = \"\"))\ntemplateID[1] <- template.dat$pkTemplateID[template.dat$fldTemplateName == \n                                             templateID[1]]\nsurvey.name <- detects.sub@survey.name\nsurvey.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkSurveyID`, `fldSurveyName` FROM `tblSurvey` WHERE `fldSurveyName` = '\", \n                                           paste(survey.name, sep = \"\", collapse = \"' OR `fldSurveyName` = '\"), \n                                           \"'\", sep = \"\"))\nsurvey.name[1] <- survey.dat$pkSurveyID[survey.dat$fldSurveyName == \n                                          survey.name[1]]\npks.L[[1]]$template <- templateID[[1]]\npks.L[[1]]$score.cutoff <- cutoff[[1]]\n\npks.L <- rbindf(pks.L)\ndate.time <- unlist(lapply(X = pks.L$date.time, FUN = substr, \n                           start = 1, stop = 19))\ntzone <- unlist(lapply(pks.L$date.time, function(x) as.character(x, \n                                                                 format = \"%Z\")))\nstart.time <- Sys.time()\nquery <- paste(\"INSERT INTO `tblResult` (`fkSurveyID`, `fkTemplateID`, `fkPersonID`, `fldDateTime`, `fldTimeZone`, `fldTime`, `fldScore`, `fldAnalysisType`,`fldCutoffValue`) VALUES ('\", \n               paste(survey.name, \"', '\", pks.L$template, \n                     \"', '\", analyst, \"', '\", date.time, \"', '\", tzone, \n                     \"', '\", pks.L$time, \"', '\", pks.L$score, \"', '\",\n                     analysis.type, \"', '\", \n                     pks.L$score.cutoff, \"')\", sep = \"\", collapse = \", ('\"), \n               sep = \"\")\nstatus <- RODBC::sqlQuery(dbCon, query)\nmessage(if (is.na(status[1])) {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse if (status[1] == \"character(0)\") {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse paste(\"Upload unsuccessful; RODBC returned errors: \", \n           paste(status, collapse = \" \")))\nclose(dbCon)\n\n## Fifth result:\ndetects.sub <- detects[[5]]\ndetects.sub@survey.name <- \"WS33L7_2017-06-07_215800_EDT_00000_000.wav\"\npks.L <- getDetections(detection.obj = detects.sub, \n                       output = \"list\", which.one = \"s2\")\nanalysis.type <- \"COR\"\ndbCon <- RODBC::odbcConnect(dsn = \"noh\", uid = \"root\", pwd = \"RSW4xN!!\")\n#which.one <- names(pks.L)\n#which.one <- \"c1\"\ncutoff <- lapply(detects.sub@templates, function(x) x@score.cutoff)\ntemplateID <- unlist(lapply(pks.L, function(x) unique(x$template)))\ntemplate.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkTemplateID`, `fldTemplateName` FROM `tblTemplate` WHERE `fldTemplateName` = '\", \n                                             paste(names(pks.L), sep = \"\", collapse = \"' OR `fldTemplateName` = '\"), \n                                             \"'\", sep = \"\"))\ntemplateID[1] <- template.dat$pkTemplateID[template.dat$fldTemplateName == \n                                             templateID[1]]\nsurvey.name <- detects.sub@survey.name\nsurvey.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkSurveyID`, `fldSurveyName` FROM `tblSurvey` WHERE `fldSurveyName` = '\", \n                                           paste(survey.name, sep = \"\", collapse = \"' OR `fldSurveyName` = '\"), \n                                           \"'\", sep = \"\"))\nsurvey.name[1] <- survey.dat$pkSurveyID[survey.dat$fldSurveyName == \n                                          survey.name[1]]\npks.L[[1]]$template <- templateID[[1]]\npks.L[[1]]$score.cutoff <- cutoff[[1]]\n\npks.L <- rbindf(pks.L)\ndate.time <- unlist(lapply(X = pks.L$date.time, FUN = substr, \n                           start = 1, stop = 19))\ntzone <- unlist(lapply(pks.L$date.time, function(x) as.character(x, \n                                                                 format = \"%Z\")))\nstart.time <- Sys.time()\nquery <- paste(\"INSERT INTO `tblResult` (`fkSurveyID`, `fkTemplateID`, `fkPersonID`, `fldDateTime`, `fldTimeZone`, `fldTime`, `fldScore`, `fldAnalysisType`,`fldCutoffValue`) VALUES ('\", \n               paste(survey.name, \"', '\", pks.L$template, \n                     \"', '\", analyst, \"', '\", date.time, \"', '\", tzone, \n                     \"', '\", pks.L$time, \"', '\", pks.L$score, \"', '\",\n                     analysis.type, \"', '\", \n                     pks.L$score.cutoff, \"')\", sep = \"\", collapse = \", ('\"), \n               sep = \"\")\nstatus <- RODBC::sqlQuery(dbCon, query)\nmessage(if (is.na(status[1])) {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse if (status[1] == \"character(0)\") {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse paste(\"Upload unsuccessful; RODBC returned errors: \", \n           paste(status, collapse = \" \")))\nclose(dbCon)\n\n## Sixth result:\ndetects.sub <- detects[[6]]\ndetects.sub@survey.name <- \"WS33L7_2017-06-08_062600_EDT_00000_000.wav\"\npks.L <- getDetections(detection.obj = detects.sub, \n                       output = \"list\", which.one = \"s2\")\nanalysis.type <- \"COR\"\ndbCon <- RODBC::odbcConnect(dsn = \"noh\", uid = \"root\", pwd = \"RSW4xN!!\")\n#which.one <- names(pks.L)\n#which.one <- \"c1\"\ncutoff <- lapply(detects.sub@templates, function(x) x@score.cutoff)\ntemplateID <- unlist(lapply(pks.L, function(x) unique(x$template)))\ntemplate.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkTemplateID`, `fldTemplateName` FROM `tblTemplate` WHERE `fldTemplateName` = '\", \n                                             paste(names(pks.L), sep = \"\", collapse = \"' OR `fldTemplateName` = '\"), \n                                             \"'\", sep = \"\"))\ntemplateID[1] <- template.dat$pkTemplateID[template.dat$fldTemplateName == \n                                             templateID[1]]\nsurvey.name <- detects.sub@survey.name\nsurvey.dat <- RODBC::sqlQuery(dbCon, paste(\"Select `pkSurveyID`, `fldSurveyName` FROM `tblSurvey` WHERE `fldSurveyName` = '\", \n                                           paste(survey.name, sep = \"\", collapse = \"' OR `fldSurveyName` = '\"), \n                                           \"'\", sep = \"\"))\nsurvey.name[1] <- survey.dat$pkSurveyID[survey.dat$fldSurveyName == \n                                          survey.name[1]]\npks.L[[1]]$template <- templateID[[1]]\npks.L[[1]]$score.cutoff <- cutoff[[1]]\n\npks.L <- rbindf(pks.L)\ndate.time <- unlist(lapply(X = pks.L$date.time, FUN = substr, \n                           start = 1, stop = 19))\ntzone <- unlist(lapply(pks.L$date.time, function(x) as.character(x, \n                                                                 format = \"%Z\")))\nstart.time <- Sys.time()\nquery <- paste(\"INSERT INTO `tblResult` (`fkSurveyID`, `fkTemplateID`, `fkPersonID`, `fldDateTime`, `fldTimeZone`, `fldTime`, `fldScore`, `fldAnalysisType`,`fldCutoffValue`) VALUES ('\", \n               paste(survey.name, \"', '\", pks.L$template, \n                     \"', '\", analyst, \"', '\", date.time, \"', '\", tzone, \n                     \"', '\", pks.L$time, \"', '\", pks.L$score, \"', '\",\n                     analysis.type, \"', '\", \n                     pks.L$score.cutoff, \"')\", sep = \"\", collapse = \", ('\"), \n               sep = \"\")\nstatus <- RODBC::sqlQuery(dbCon, query)\nmessage(if (is.na(status[1])) {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse if (status[1] == \"character(0)\") {\n  paste(\"Done! Upload time:\", round(Sys.time() - start.time, \n                                    2), \"seconds\")\n}\nelse paste(\"Upload unsuccessful; RODBC returned errors: \", \n           paste(status, collapse = \" \")))\nclose(dbCon)\n\n##Clean up\nrm (detects, detects.sub, detects.test, scores, scores.test)\n\n",
    "created" : 1507310814679.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "405285913",
    "id" : "A4CA994C",
    "lastKnownWriteTime" : 1510339417,
    "last_content_update" : 1510339417431,
    "path" : "~/GitHub/BITH_Maine/Workflow.R",
    "project_path" : "Workflow.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}